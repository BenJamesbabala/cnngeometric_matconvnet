normcoords = @(x,L) (x-1-(L-1)/2)*2/(L-1);
unormcoords = @(x,L) x*(L-1)/2+1+(L-1)/2;

trainedModelsPath = '/local2/iroccosp/Dropbox/CVPR17/cnngeometric_code/trained_models/';
aff = 'aff';

% % load aff net
% net = load(fullfile(trainedModelsPath,aff,'/net.mat')); 
% net=net.net;    
% while length(net.layers)>net.getLayerIndex('correlate')
%     net.removeLayer(net.layers(end).name);
% end
% net.conserveMemory=true;
% net.mode='test';
% net.vars(end).precious=1;

lastLayer='pool4'
% fsize=15;
imsz=227;
fsize=15;
mutual=1;
offset=8.5;

% use proposal flow
load('/meleze/data0/iroccosp/datasets/instance/PF-dataset/test_pairs_pf.mat');
pfPath ='/sequoia/data1/iroccosp/datasets/instance/PF-dataset/';

%% 
N=800
xyA = cell(N,1);
xyB = cell(N,1);
xyAratio = cell(N,1);
xyBratio = cell(N,1);
xyAin = cell(N,1);
xyBin = cell(N,1);
theta = zeros(1,6,N);
pckAffVec = zeros(N,1);
doPlotting = 0;


for k=1:N
    
    idx=k;
    % idx=tidx(k);
    IA=imread(fullfile(pfPath,pairs.imageA{idx}));
    IB=imread(fullfile(pfPath,pairs.imageB{idx}));
    
    [hA,wA]=size(IA(:,:,1));
    [hB,wB]=size(IB(:,:,1));
    
    IA=imresize(IA,size(IB(:,:,1)));
    IA_=preprocessAlexNet(IA,[imsz imsz]);
    IB_=preprocessAlexNet(IB,[imsz imsz]);  

    net.eval({'AN1input', IA_,'AN2input',IB_});
    corr=net.vars(end).value;

    % define image coordinates of CNN features
    [h,w]=size(IA_(:,:,1));
    hoffset = offset;
    woffset = offset;
    X=linspace(woffset,w-woffset+1,fsize);
    Y=linspace(hoffset,h-hoffset+1,fsize);

    % forward matches
    [corrSrtA,idxAsorted]=sort(reshape(corr,fsize^2,fsize^2),2,'descend');
    idxA=idxAsorted(:,1);
    idxB=1:fsize^2;
    
    % remove multiple matches
    idxB1=zeros(fsize^2,1); idxB1(idxA)=idxB;    
    idxA=find(idxB1~=0);
    idxB=idxB1(idxA);      

%     % forward matches
%     [corrSrtA,idxAsorted]=sort(reshape(corr,fsize^2,fsize^2),2,'descend');
%     idxA=idxAsorted(:,1);
%     idxB=1:fsize^2;
%     
%     % remove multiple matches
%     idxB1=zeros(fsize^2,1); idxB1(idxA)=idxB;    
%     badIdx=find(sum(bsxfun(@eq,idxA,1:fsize^2),1)>1 | sum(bsxfun(@eq,idxA,1:fsize^2),1)==0);
%     goodIdx=1:fsize^2;
%     goodIdx(badIdx)=[];
%     idxA=goodIdx;
%     idxB=idxB1(goodIdx);   
    
    % get match coordinates
    [rowB,colB]=ind2sub([fsize fsize],idxB);
    [rowA,colA]=ind2sub([fsize fsize],idxA);

    xA = X(colA(:));
    yA = Y(rowA(:));
    xB = X(colB(:));
    yB = Y(rowB(:));
    
    xyAratio{idx}=[xA' yA'];
    xyBratio{idx}=[xB' yB'];

    if doPlotting==1
        figure(1); clf; imshow([uint8(IA_+128) uint8(IB_+128)]); hold on; 
        colors=hsv(length(xA));
        for i=1:length(xA)
            xAjit=xA(i)+(rand(1)-0.5)*15;
            xBjit=imsz+xB(i)+(rand(1)-0.5)*15;
            yAjit=yA(i)+(rand(1)-0.5)*15;
            yBjit=yB(i)+(rand(1)-0.5)*15;
            plot([xAjit xBjit],[yAjit yBjit],'r','Color',colors(i,:));
            plot([xAjit xBjit],[yAjit yBjit],'.','MarkerSize',5,'Color',colors(i,:));
        end
        waitforbuttonpress
    end

    
    if length(xA)>=3
        % bad ransac thresh
        [thetaAff,~,bestScore,inliersA_XY,inliersB_XY] = estimateAffine(uint8(IA_+128),uint8(IA_+128),xA,yA,xB,yB); %,0,0.0015,2000);
        % good ransac thresh
        %[thetaAff,~,bestScore,inliersA_XY,inliersB_XY] = estimateAffine(uint8(IA_+128),uint8(IA_+128),xA,yA,xB,yB,0,0.0015,2000);

        %IAaff = warpImageAffine(imresize(IA,[hB wB]),thetaAff);
        IAaff = warpImageAffine(uint8(IA_+128),thetaAff);
        
        if ~isempty(inliersA_XY)
            xAin=inliersA_XY(:,1); yAin=inliersA_XY(:,2);
            xBin=inliersB_XY(:,1); yBin=inliersB_XY(:,2);

            xyAin{idx}=[xAin yAin];
            xyBin{idx}=[xBin yBin];
        end
        theta(1,:,idx)=thetaAff;
        colors=hsv(length(xA));
        if doPlotting==1
            colors=hsv(length(xA));
            clf; imshow([uint8(IA_+128) uint8(IB_+128)]); hold on; 
            for i=1:length(xAin)
                xAjit=xAin(i)+(rand(1)-0.5)*15;
                xBjit=imsz+xBin(i)+(rand(1)-0.5)*15;
                yAjit=yAin(i)+(rand(1)-0.5)*15;
                yBjit=yBin(i)+(rand(1)-0.5)*15;
                plot([xAjit xBjit],[yAjit yBjit],'r','LineWidth',maxval(i),'Color',colors(i,:));
                plot([xAjit xBjit],[yAjit yBjit],'.','MarkerSize',5,'Color',colors(i,:));
            end
        end
    else
        thetaAff=zeros(1,6);
        IAaff = zeros(size(uint8(IA_+128)),'uint8');
        if doPlotting==1
            clf; imshow([uint8(IA_+128) uint8(IB_+128)]); hold on; 
        end
    end

    % compute PCK
    XA = pairs.XA{idx};
    YA = pairs.YA{idx};
    XB = pairs.XB{idx};
    YB = pairs.YB{idx};    
        
    Lpck = max(max(XA)-min(XA),max(YA)-min(YA));          
    XBNNaff = thetaAff(1)*normcoords(XB,wB)+thetaAff(3)*normcoords(YB,hB)+thetaAff(5);    
    YBNNaff = thetaAff(4)*normcoords(XB,wB)+thetaAff(2)*normcoords(YB,hB)+thetaAff(6);    
    XBNNaff_ = unormcoords(XBNNaff,wA);
    YBNNaff_ = unormcoords(YBNNaff,hA);

    daff = sqrt((squeeze(XBNNaff_)-XA).^2+(squeeze(YBNNaff_)-YA).^2);
    alpha = 0.1;
    pck=sum(daff<=alpha*Lpck)/length(daff)
    pckAffVec(idx) = pck;
    
   
    if doPlotting==1
        if ~isempty(htmlpth)
            drawnow; snapshot([htmlpth '/images/' num2str(k) '_inliers.jpg'],9);
        end
        %waitforbuttonpress
        %figure(3);
        clf;imshow([uint8(IB_+128)*0.45+IAaff*0.65])
        if ~isempty(htmlpth)
            drawnow; snapshot([htmlpth '/images/' num2str(k) '_overlay.jpg'],9);
        end        
        %waitforbuttonpress
    end
    
    display([num2str(k) '/' num2str(N)])
end
